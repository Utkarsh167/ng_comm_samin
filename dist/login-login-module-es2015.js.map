{"version":3,"sources":["./src/app/modules/account/login/component/login.component.html","./src/app/modules/account/login/component/login.component.scss","./src/app/modules/account/login/component/login.component.ts","./src/app/modules/account/login/login.module.ts","./src/app/modules/account/login/service/login.service.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \"<h1 class=\\\"form_heading\\\">Login</h1>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <div class=\\\"form_filed_wrapper\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Email</mat-label>\\n      <input matInput formControlName=\\\"email\\\">\\n      <!-- <mat-error>{{getControl('email')|validate:'email'}}</mat-error> -->\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"form_filed_wrapper\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Password</mat-label>\\n      <input matInput formControlName=\\\"password\\\" [type]=\\\"hide ? 'password' :'text'\\\">\\n      <!-- <mat-error>{{getControl('password')|validate:'password'}}</mat-error> -->\\n      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">\\n        {{hide ? 'visibility_off' :'visibility'}}\\n      </mat-icon>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"form_filed_wrapper text-right\\\">\\n    <a class=\\\"forgot\\\" [routerLink]=\\\"'FORGOT_PASSWORD'|absolutePath\\\">Forgot Password</a>\\n  </div>\\n  <div class=\\\"form_filed_wrapper text-center\\\">\\n    <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n  </div>\\n</form>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNjb3VudC9sb2dpbi9jb21wb25lbnQvbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  hide = true;\n  loginForm: FormGroup;\n\n  constructor(\n    private _loginService: LoginService\n  ) {\n    this.createLoginForm();\n  }\n  \n  ngOnInit() {\n  }\n\n  /* \n      Method For Creating Login Form \n  */\n  createLoginForm() {\n    this.loginForm = this._loginService.createLoginForm();\n  }\n\n  getControl(control) {\n    return this.loginForm.controls[control];\n  }\n\n  /*  \n       Method For Calling Login API\n  */\n  login() {\n    if (this.loginForm.invalid || this.loginForm.disabled) {\n      return;\n    }\n    const data = { ...this.loginForm.value };\n    this.loginForm.disable();\n    this._loginService.login(data).subscribe(\n      response => {\n      },\n      err => {\n        this.loginForm.enable();\n      }\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './component/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginService } from './service/login.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatIconModule,\n  MatInputModule,\n  MatFormFieldModule,\n} from '@angular/material';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    SharedModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  providers: [LoginService]\n})\nexport class LoginModule { }\n","import { Injectable } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { HttpService } from \"../../../shared/services/http.service\";\nimport { UtilityService } from \"../../../shared/services/utility.service\";\nimport { Router } from \"@angular/router\";\nimport { throwError } from \"rxjs\";\nimport { FormService } from \"../../../shared/services/form.service\";\nimport { LOGIN } from \"src/app/constant/url\";\nimport { map, catchError } from \"rxjs/operators\";\n// import { DataTransferService } from '../../../shared/services/data-transfer.service';\nimport { ADMIN, COMPANY } from \"../../../../constant/routes\";\n\n@Injectable()\nexport class LoginService {\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _http: HttpService,\n    private _utilityService: UtilityService,\n    private _router: Router,\n    private _formService: FormService // private _dataTransferService: DataTransferService\n  ) {}\n\n  /* \n        Method For Creating Login Form\n    */\n  createLoginForm() {\n    return this._formBuilder.group({\n      email: this._formService.getControl(\"email\"),\n      password: this._formService.getControl(\"password\")\n    });\n  }\n\n  /*  \n        Method For Calling Login API\n    */\n  login(data) {\n    data = this._utilityService.trim(data);\n    return this._http.post(LOGIN, data).pipe(\n      map(response => {\n        this.loginSuccess(response.data);\n        return response;\n      }),\n      catchError(err => throwError(err))\n    );\n  }\n  /*  \n        Method For Login\n    */\n  loginSuccess(data) {\n    localStorage.setItem(\"fleet-super-admin-token\", data[\"accessToken\"]);\n    localStorage.setItem(\"fleet-super-admin-id\", data.adminObject[\"id\"]);\n    // this._dataTransferService.profileData = data.adminObject;\n    this._router.navigate([\"/admin/company\"]);\n  }\n}\n"],"sourceRoot":"webpack:///"}