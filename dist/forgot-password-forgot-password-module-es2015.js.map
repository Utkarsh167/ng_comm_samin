{"version":3,"sources":["./src/app/modules/account/forgot-password/component/forgot-password.component.html","./src/app/constant/error.ts","./src/app/modules/account/forgot-password/component/forgot-password.component.scss","./src/app/modules/account/forgot-password/component/forgot-password.component.ts","./src/app/modules/account/forgot-password/forgot-password.module.ts","./src/app/modules/account/forgot-password/service/forgot-password.service.ts","./src/app/pipes/validation-error/validation-error.pipe.module.ts","./src/app/pipes/validation-error/validation-error.pipe.ts"],"names":[],"mappings":"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","file":"forgot-password-forgot-password-module-es2015.js","sourcesContent":["export default \"<h1 class=\\\"form_heading\\\">Forgot Password</h1>\\n<p class=\\\"form-para\\\">\\n  {{title}}\\n</p>\\n<form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"validateEmail()\\\">\\n  <div class=\\\"form_filed_wrapper\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Enter Email Id</mat-label>\\n      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n      <mat-error>\\n        {{getControl('email')|validate:'email'}}\\n      </mat-error>\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"form_filed_wrapper text-right\\\">\\n    <a class=\\\"forgot\\\" [routerLink]=\\\"'LOGIN'|absolutePath\\\">Back</a>\\n  </div>\\n  <div class=\\\"form_filed_wrapper text-center\\\">\\n    <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n  </div>\\n</form>\"","import { toTitleCase } from \"./message\";\nimport { PATTERN } from \"./patterns\";\n\nexport const PATTERN_ERRORS = (pattern, key) => {\n    if (pattern == PATTERN.email) {\n        return `Please enter a valid ${key.toLowerCase()}`\n    }\n    if (pattern == PATTERN.password) {\n        return `${toTitleCase(key)} can not contain blank spaces`\n    }\n    if (pattern == PATTERN.name) {\n        return `${toTitleCase(key)} can not be blank`\n    }\n    if (pattern == PATTERN.phone) {\n        return `${toTitleCase(key)} must contain only numbers and can not start with 0`\n    }\n    if (pattern == PATTERN.price) {\n        return `${toTitleCase(key)} must contain only numbers and can not start with 0`\n    }\n    if (pattern == PATTERN.alphaNumeric) {\n        return `${toTitleCase(key)} can contain only characters and numbers`\n    }\n    if (pattern == PATTERN.numeric) {\n        return `${toTitleCase(key)} can contain only numbers`\n    }\n    if (pattern == PATTERN.alphabetsWithSpace) {\n        return `${toTitleCase(key)} can contain only characters and space`\n    }\n}","export default \".form-para {\\n  font-size: 18px;\\n  line-height: 1.8;\\n  margin-bottom: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYW5zbGFiZGV2Mi9EZXYvYW5ndWxhci9jb21tX2ZlX3NhZG1pbi9zcmMvYXBwL21vZHVsZXMvYWNjb3VudC9mb3Jnb3QtcGFzc3dvcmQvY29tcG9uZW50L2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9hY2NvdW50L2ZvcmdvdC1wYXNzd29yZC9jb21wb25lbnQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNjb3VudC9mb3Jnb3QtcGFzc3dvcmQvY29tcG9uZW50L2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLXBhcmEge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMS44O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG59IiwiLmZvcm0tcGFyYSB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6IDEuODtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ForgotPasswordService } from '../service/forgot-password.service';\nimport { POPUP_MESSAGES } from 'src/app/constant/message';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  forgotForm: FormGroup;\n  showSpinner = false;\n  title = POPUP_MESSAGES.forgotPasswordTitle;\n\n  constructor(\n    private _forgotPasswordService: ForgotPasswordService\n  ) {\n    this.createForgotPasswordForm();\n  }\n\n  ngOnInit() {\n  }\n  /* \n      Method For Creating Forgot Password Form\n  */\n  createForgotPasswordForm() {\n    this.forgotForm = this._forgotPasswordService.createForgotForm();\n  }\n\n  getControl(control) {\n    return this.forgotForm.controls[control];\n  }\n\n  /*  \n       Method For Calling Validating Email\n  */\n  validateEmail() {\n    if (this.forgotForm.invalid)\n      return;\n    const data = { ...this.forgotForm.value };\n    this.forgotForm.disable();\n    this._forgotPasswordService.validateEmail(data)\n      .subscribe(\n        response => {\n        },\n        err => {\n          this.forgotForm.enable();\n        }\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgotPasswordComponent } from './component/forgot-password.component';\nimport { AccountGuard } from '../../../guards/account.guard';\nimport {\n  MatButtonModule,\n  MatInputModule,\n  MatFormFieldModule\n} from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ForgotPasswordService } from './service/forgot-password.service';\nimport { ValidationErrorPipeModule } from 'src/app/pipes/validation-error/validation-error.pipe.module';\n\nconst routes: Routes = [\n  { path: '', component: ForgotPasswordComponent, canActivate: [AccountGuard] }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    ValidationErrorPipeModule\n  ],\n  declarations: [ForgotPasswordComponent],\n  providers: [ForgotPasswordService]\n})\nexport class ForgotPasswordModule { }\n","import { Injectable } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpService } from '../../../shared/services/http.service';\nimport { POPUP_MESSAGES } from 'src/app/constant/message';\nimport { FormService } from '../../../shared/services/form.service';\nimport { UtilityService } from '../../../shared/services/utility.service';\nimport { Router } from '@angular/router';\nimport { LOGIN } from '../../../../constant/absolute-routes';\nimport { FORGOT_PASSWORD } from 'src/app/constant/url';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable()\nexport class ForgotPasswordService {\n\n    constructor(\n        private _formBuilder: FormBuilder,\n        private _http: HttpService,\n        private _utilityService: UtilityService,\n        private _router: Router,\n        private _formService: FormService\n    ) { }\n\n    /* \n         Method For Creating Forgot Password Form\n     */\n    createForgotForm() {\n        return this._formBuilder.group(\n            {\n                email: this._formService.getControl('email')\n            }\n        )\n    }\n    /* \n       Method For Validating Forgot Password Email\n   */\n    validateEmail(data) {\n        data = this._utilityService.trim(data);\n        return this._http.post(FORGOT_PASSWORD, data).pipe(\n            map(\n                response => {\n                    this.emailValidationSuccess();\n                    return response;\n                }\n            ),\n            catchError(\n                error => throwError(error)\n            )\n        )\n    }\n\n    /* \n       Method For Showing popup of successfully verifying and sending reset password link\n   */\n    emailValidationSuccess() {\n        let data = {\n            title: POPUP_MESSAGES.passwordResetTitle,\n            message: POPUP_MESSAGES.passwordResetLink,\n            yes: POPUP_MESSAGES.close,\n            hideCancelButton: true\n        }\n        this._utilityService.openDialog(data).subscribe(success => {\n            this._router.navigate([LOGIN]);\n        });\n    }\n}\n","import { ValidationErrorPipe } from './validation-error.pipe';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ], \n  declarations: [\n    ValidationErrorPipe,\n  ],\n  exports: [\n    ValidationErrorPipe,\n  ],\n  providers:[]\n})\nexport class ValidationErrorPipeModule { }\n","import { FormControl } from '@angular/forms';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { PATTERN_ERRORS } from '../../constant/error';\nimport { VALIDATION_MESSAGES, toTitleCase } from 'src/app/constant/message';\n@Pipe({\n  name: 'validate',\n  pure: false\n})\nexport class ValidationErrorPipe implements PipeTransform {\n  constructor() {\n  }\n  transform(control: FormControl, name: string): any {\n    return control && control.errors ? this.getValidationError(control, name) : ''\n  }\n  getValidationError(control: FormControl, name) {\n    if (control.hasError('required')) {\n      return `${toTitleCase(name)} is required`;\n    }\n    if (control.hasError('pattern')) {\n      let pattern = control.errors.pattern.requiredPattern;\n      return PATTERN_ERRORS(pattern, name);\n    }\n    if (control.hasError('minlength')) {\n      return `${toTitleCase(name)} must be at least ${control.errors.minlength.requiredLength} characters long`;\n    }\n    if (control.hasError('maxlength')) {\n      return `${toTitleCase(name)} can not be more than ${control.errors.maxlength.requiredLength} characters long`;\n    }\n    if (control.hasError('matchPassword')) {\n      return VALIDATION_MESSAGES[name]['matchPassword'] || '';\n    }\n    if (control.hasError('min')) {\n      return `${toTitleCase(name)} can not be less than ${control.errors.min.min}`;\n    }\n    if (control.hasError('max')) {\n      return `${toTitleCase(name)} can not be greater than ${control.errors.max.max}`;\n    }\n    if (control.hasError('url')) {\n      return ` Please enter correct ${toTitleCase(name)}`;\n    }\n\n    \n  }\n}"],"sourceRoot":"webpack:///"}