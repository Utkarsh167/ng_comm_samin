{"version":3,"sources":["./src/app/modules/change-password/change-password.component.html","./src/app/constant/error.ts","./src/app/modules/change-password/change-password.component.scss","./src/app/modules/change-password/change-password.component.ts","./src/app/modules/change-password/change-password.module.ts","./src/app/modules/change-password/service/change-password.service.ts","./src/app/pipes/validation-error/validation-error.pipe.module.ts","./src/app/pipes/validation-error/validation-error.pipe.ts"],"names":[],"mappings":"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","file":"change-password-change-password-module-es2015.js","sourcesContent":["export default \"<div class=\\\"custom_container\\\">\\n  <div class=\\\"white_wrapper\\\">\\n    <h2 class=\\\"heading\\\">{{'Change Password'}}</h2>\\n    <form [formGroup]=\\\"changePasswordForm\\\" (ngSubmit)=\\\"changePassword()\\\">\\n      <div class=\\\"form_wrapper\\\">\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Current Passord</mat-label>\\n                <input matInput formControlName=\\\"oldPassword\\\" placeholder=\\\"Old Password\\\"\\n                  [type]=\\\"hidePassword ? 'password' : 'text'\\\">\\n                <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\" style=\\\"cursor: pointer\\\">\\n                  {{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                <mat-error>{{getControl('oldPassword')|validate:'old password'}}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>New Password</mat-label>\\n                <input matInput formControlName=\\\"password\\\" placeholder=\\\"New Password\\\"\\n                  [type]=\\\"hidePassword ? 'password' : 'text'\\\">\\n                <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\" style=\\\"cursor: pointer\\\">\\n                  {{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                <mat-error>{{getControl('password')|validate:'new password'}}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Confirm New Password</mat-label>\\n                <input matInput formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\"\\n                  [type]=\\\"hideConfirmPassword ? 'password' : 'text'\\\">\\n                <mat-icon matSuffix (click)=\\\"hideConfirmPassword = !hideConfirmPassword\\\" style=\\\"cursor: pointer\\\">\\n                  {{hideConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                <mat-error>{{getControl('confirmPassword')|validate:'confirm password'}}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_10\\\">\\n            <div class=\\\"form_filed_wrapper text-center\\\">\\n\\n              <ul class=\\\"btn_wrapper\\\">\\n                <li> <button mat-raised-button type=\\\"button\\\" [routerLink]=\\\"'DASHBOARD'|absolutePath\\\">Cancel</button>\\n                </li>\\n                <li> <button mat-raised-button color=\\\"primary\\\">{{'Save'}}</button>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { toTitleCase } from \"./message\";\nimport { PATTERN } from \"./patterns\";\n\nexport const PATTERN_ERRORS = (pattern, key) => {\n    if (pattern == PATTERN.email) {\n        return `Please enter a valid ${key.toLowerCase()}`\n    }\n    if (pattern == PATTERN.password) {\n        return `${toTitleCase(key)} can not contain blank spaces`\n    }\n    if (pattern == PATTERN.name) {\n        return `${toTitleCase(key)} can not be blank`\n    }\n    if (pattern == PATTERN.phone) {\n        return `${toTitleCase(key)} must contain only numbers and can not start with 0`\n    }\n    if (pattern == PATTERN.price) {\n        return `${toTitleCase(key)} must contain only numbers and can not start with 0`\n    }\n    if (pattern == PATTERN.alphaNumeric) {\n        return `${toTitleCase(key)} can contain only characters and numbers`\n    }\n    if (pattern == PATTERN.numeric) {\n        return `${toTitleCase(key)} can contain only numbers`\n    }\n    if (pattern == PATTERN.alphabetsWithSpace) {\n        return `${toTitleCase(key)} can contain only characters and space`\n    }\n}","export default \"mat-radio-button {\\n  margin: 0 43px 0 0;\\n}\\n\\n.flex_row {\\n  display: -webkit-box;\\n  display: flex;\\n  margin: 0 -10px;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n}\\n\\n.searchPanel {\\n  position: absolute;\\n  top: 20px;\\n  right: 3px;\\n  background: #fff;\\n  width: 29px;\\n  font-size: 23px;\\n}\\n\\n.search {\\n  position: relative;\\n}\\n\\n.search .searchPanel {\\n  position: absolute;\\n  top: 26px;\\n  right: 10px;\\n}\\n\\n.form_filed_wrapper.gender .mat-error {\\n  font-size: 12px;\\n  margin-top: 5px;\\n}\\n\\n.white_wrapper .btn_wrapper li .mat-raised-button.mat-primary {\\n  min-width: 104px;\\n}\\n\\nbutton {\\n  box-shadow: none !important;\\n  border: 1px solid #79f2c0 !important;\\n  min-width: 104px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYW5zbGFiZGV2Mi9EZXYvYW5ndWxhci9jb21tX2ZlX3NhZG1pbi9zcmMvYXBwL21vZHVsZXMvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUNDSjs7QURFQTtFQUNJLG9CQUFBO0VBQUEsYUFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0VBQ0Esd0JBQUE7VUFBQSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0o7O0FEQUk7RUFDSSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0FDRVI7O0FESVE7RUFDSSxlQUFBO0VBQ0EsZUFBQTtBQ0RaOztBREtBO0VBQ0ksZ0JBQUE7QUNGSjs7QURJQTtFQUNJLDJCQUFBO0VBQ0Esb0NBQUE7RUFDQSxnQkFBQTtBQ0RKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LXJhZGlvLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiAwIDQzcHggMCAwO1xufVxuXG4uZmxleF9yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luOiAwIC0xMHB4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5zZWFyY2hQYW5lbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjBweDtcbiAgICByaWdodDogM3B4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgd2lkdGg6IDI5cHg7XG4gICAgZm9udC1zaXplOiAyM3B4O1xufVxuXG4uc2VhcmNoIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLnNlYXJjaFBhbmVsIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDI2cHg7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgIH1cbn1cblxuLmZvcm1fZmlsZWRfd3JhcHBlciB7XG4gICAgJi5nZW5kZXIge1xuICAgICAgICAubWF0LWVycm9yIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgICAgfVxuICAgIH1cbn1cbi53aGl0ZV93cmFwcGVyIC5idG5fd3JhcHBlciBsaSAubWF0LXJhaXNlZC1idXR0b24ubWF0LXByaW1hcnl7XG4gICAgbWluLXdpZHRoOjEwNHB4O1xufVxuYnV0dG9ue1xuICAgIGJveC1zaGFkb3c6bm9uZSAhaW1wb3J0YW50O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM3OWYyYzAgIWltcG9ydGFudDtcbiAgICBtaW4td2lkdGg6MTA0cHg7XG59IiwibWF0LXJhZGlvLWJ1dHRvbiB7XG4gIG1hcmdpbjogMCA0M3B4IDAgMDtcbn1cblxuLmZsZXhfcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luOiAwIC0xMHB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnNlYXJjaFBhbmVsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDIwcHg7XG4gIHJpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHdpZHRoOiAyOXB4O1xuICBmb250LXNpemU6IDIzcHg7XG59XG5cbi5zZWFyY2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uc2VhcmNoIC5zZWFyY2hQYW5lbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyNnB4O1xuICByaWdodDogMTBweDtcbn1cblxuLmZvcm1fZmlsZWRfd3JhcHBlci5nZW5kZXIgLm1hdC1lcnJvciB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG4ud2hpdGVfd3JhcHBlciAuYnRuX3dyYXBwZXIgbGkgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5IHtcbiAgbWluLXdpZHRoOiAxMDRweDtcbn1cblxuYnV0dG9uIHtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBib3JkZXI6IDFweCBzb2xpZCAjNzlmMmMwICFpbXBvcnRhbnQ7XG4gIG1pbi13aWR0aDogMTA0cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ChangePasswordService } from './service/change-password.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  hideConfirmPassword = true;\n  hidePassword = true;\n  changePasswordForm: FormGroup;\n  constructor(\n    private _changePasswordService: ChangePasswordService,\n    ) {\n      this.changePasswordForm = this._changePasswordService.getChangePasswordForm();\n     }\n\n  ngOnInit() {\n  }\n\n  getControl(name) {\n    return this.changePasswordForm.controls[name];\n  }\n\n  changePassword() {\n    if (this.changePasswordForm.valid || this.changePasswordForm.disabled) {\n      let data = { ...this.changePasswordForm.value };\n      this.changePasswordForm.disable();\n      this._changePasswordService.changePassword(data)\n        .subscribe(\n          response => {},\n          error => {\n            this.changePasswordForm.enable();\n          }\n\n        )\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { MatCardModule, MatIconModule, MatInputModule, MatButtonModule, MatFormFieldModule } from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AbsoluteRoutingModule } from 'src/app/pipes/absolute-routing/absolute-routing.module';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangePasswordService } from './service/change-password.service';\nimport { ValidationErrorPipeModule } from 'src/app/pipes/validation-error/validation-error.pipe.module';\n\n\nconst passwordRoutes: Routes = [\n\n  { path: '', component: ChangePasswordComponent },\n\n]\n\nconst MATERILA_MODULE = [\n  MatCardModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  ReactiveFormsModule,\n  MatInputModule,\n  MatButtonModule\n]\n\nconst PIPES_MODULE = [\n  AbsoluteRoutingModule\n]\n\n\n@NgModule({\n  declarations: [ChangePasswordComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(passwordRoutes),\n    ...MATERILA_MODULE,\n    ...PIPES_MODULE,\n    ValidationErrorPipeModule\n  ],\n  providers: [ChangePasswordService]\n\n})\nexport class ChangePasswordModule { }\n","import { Injectable } from '@angular/core';\nimport { UtilityService } from '../../shared/services/utility.service';\nimport { HttpService } from '../../shared/services/http.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FormService } from '../../shared/services/form.service';\nimport { POPUP_MESSAGES } from 'src/app/constant/message';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { CHANGE_PASSWORD } from 'src/app/constant/url';\nimport { HOME } from 'src/app/constant/absolute-routes';\n\n@Injectable()\nexport class ChangePasswordService {\n\n  constructor(\n    private _utilityService: UtilityService,\n        private _http: HttpService,\n        private _formBuilder: FormBuilder,\n        private _router: Router,\n        private _formService:FormService\n  ) { }\n\n  /**\n     * @description Making Change Password Form\n     */\n    getChangePasswordForm() {\n      return this._formBuilder.group(\n          {\n              oldPassword: this._formService.getControl('password'),\n              password: this._formService.getControl('password'),\n              confirmPassword: this._formService.getControl('password')\n          },\n          {\n              validator: this._formService.matchPassword\n          }\n      );\n  }\n\n  /**\n   * @description Changing Password , After that Redirect To Setting Page\n   * @param data \n   */\n  changePassword(data) {\n      return this._http.post(CHANGE_PASSWORD, data).pipe(\n          map(\n              response => {\n                  if (response['statusCode'] === 200) {\n                      this._utilityService.showAlert(POPUP_MESSAGES['passwordChanged']);\n                      this._router.navigate([HOME]);\n                  }\n              }\n          ),\n          catchError(\n              error => {\n                  return throwError(error);\n              }\n          )\n      )\n  }\n}\n","import { ValidationErrorPipe } from './validation-error.pipe';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ], \n  declarations: [\n    ValidationErrorPipe,\n  ],\n  exports: [\n    ValidationErrorPipe,\n  ],\n  providers:[]\n})\nexport class ValidationErrorPipeModule { }\n","import { FormControl } from '@angular/forms';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { PATTERN_ERRORS } from '../../constant/error';\nimport { VALIDATION_MESSAGES, toTitleCase } from 'src/app/constant/message';\n@Pipe({\n  name: 'validate',\n  pure: false\n})\nexport class ValidationErrorPipe implements PipeTransform {\n  constructor() {\n  }\n  transform(control: FormControl, name: string): any {\n    return control && control.errors ? this.getValidationError(control, name) : ''\n  }\n  getValidationError(control: FormControl, name) {\n    if (control.hasError('required')) {\n      return `${toTitleCase(name)} is required`;\n    }\n    if (control.hasError('pattern')) {\n      let pattern = control.errors.pattern.requiredPattern;\n      return PATTERN_ERRORS(pattern, name);\n    }\n    if (control.hasError('minlength')) {\n      return `${toTitleCase(name)} must be at least ${control.errors.minlength.requiredLength} characters long`;\n    }\n    if (control.hasError('maxlength')) {\n      return `${toTitleCase(name)} can not be more than ${control.errors.maxlength.requiredLength} characters long`;\n    }\n    if (control.hasError('matchPassword')) {\n      return VALIDATION_MESSAGES[name]['matchPassword'] || '';\n    }\n    if (control.hasError('min')) {\n      return `${toTitleCase(name)} can not be less than ${control.errors.min.min}`;\n    }\n    if (control.hasError('max')) {\n      return `${toTitleCase(name)} can not be greater than ${control.errors.max.max}`;\n    }\n    if (control.hasError('url')) {\n      return ` Please enter correct ${toTitleCase(name)}`;\n    }\n\n    \n  }\n}"],"sourceRoot":"webpack:///"}