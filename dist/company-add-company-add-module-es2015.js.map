{"version":3,"sources":["./src/app/modules/layout/company/company-add/component/company-add.component.html","./src/app/modules/layout/company/company-add/company-add.module.ts","./src/app/modules/layout/company/company-add/component/company-add.component.scss","./src/app/modules/layout/company/company-add/component/company-add.component.ts","./src/app/modules/layout/company/company-add/service/company-add.service.ts"],"names":[],"mappings":"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","file":"company-add-company-add-module-es2015.js","sourcesContent":["export default \"<div class=\\\"custom_container\\\">\\n  <div class=\\\"white_wrapper\\\">\\n    <h2 class=\\\"heading\\\">Add Company</h2>\\n    <div class=\\\"flex_row\\\">\\n      <ul class=\\\"breadcrumb\\\">\\n        <li>\\n          <a [routerLink]=\\\"'COMPANY' | absolutePath\\\">Company</a>\\n        </li>\\n        <li>\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"active\\\">Add</a>\\n        </li>\\n      </ul>\\n    </div>\\n    <form\\n      action=\\\"\\\"\\n      [formGroup]=\\\"companyForm\\\"\\n      (submit)=\\\"addCompany(companyForm.value)\\\"\\n    >\\n      <div class=\\\"form_wrapper\\\">\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Company Code</mat-label>\\n                <input appNospace formControlName=\\\"companyCode\\\" matInput />\\n                <mat-error>{{\\n                  getControl(\\\"companyCode\\\") | validate: \\\"Company Code\\\"\\n                }}</mat-error>\\n                <mat-error *ngIf=\\\"isCompanyUniqueMsg\\\">{{\\n                  isCompanyUniqueMsg\\n                }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Company Name</mat-label>\\n                <input\\n                  appNospace\\n                  formControlName=\\\"name\\\"\\n                  matInput\\n                  maxlength=\\\"50\\\"\\n                />\\n                <mat-error>{{\\n                  getControl(\\\"name\\\") | validate: \\\"Company Name\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Email ID</mat-label>\\n                <input formControlName=\\\"email\\\" matInput />\\n                <mat-error>{{\\n                  getControl(\\\"email\\\") | validate: \\\"Email id\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"flex_col_sm_5\\\" formArrayName=\\\"contactNumber\\\">\\n            <div\\n              class=\\\"form_filed_wrapper\\\"\\n              *ngFor=\\\"\\n                let number of contactNumber.controls;\\n                let j = index;\\n                last as last\\n              \\\"\\n              [formGroupName]=\\\"j\\\"\\n            >\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Contact Number</mat-label>\\n                <input matInput formControlName=\\\"phoneNumber\\\" numberOnly />\\n                <mat-error>{{\\n                  getArrayControl(\\\"phoneNumber\\\") | validate: \\\"Phone Number\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n              <mat-icon\\n                class=\\\"add\\\"\\n                *ngIf=\\\"j == 0 && contactNumber.controls.length <= 2\\\"\\n                matTooltip=\\\"Add More\\\"\\n                matTooltipPosition=\\\"before\\\"\\n                (click)=\\\"addItem()\\\"\\n              >\\n                add_circle\\n              </mat-icon>\\n\\n              <mat-icon\\n                class=\\\"add\\\"\\n                *ngIf=\\\"j > 0\\\"\\n                matTooltip=\\\"Remove\\\"\\n                matTooltipPosition=\\\"before\\\"\\n                (click)=\\\"removeNumber(j)\\\"\\n              >\\n                remove_circle\\n              </mat-icon>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Select company Type</mat-label>\\n                <mat-select\\n                  formControlName=\\\"companyType\\\"\\n                  placeholder=\\\"Select company type\\\"\\n                >\\n                  <mat-option\\n                    *ngFor=\\\"let type of companyTypes\\\"\\n                    [value]=\\\"type.id\\\"\\n                  >\\n                    {{ type.companyType }}</mat-option\\n                  >\\n                </mat-select>\\n                <mat-error>{{\\n                  getControl(\\\"companyType\\\") | validate: \\\"Company Type\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper search\\\">\\n              <mat-form-field\\n                appearance=\\\"outline\\\"\\n                [ngClass]=\\\"isAddress ? 'mat-form-field-invalid' : ''\\\"\\n              >\\n                <mat-label>Search Branch Location</mat-label>\\n                <input\\n                  matInput\\n                  appGooglePlaces\\n                  class=\\\"textbox\\\"\\n                  placeholder=\\\"Search Branch Location\\\"\\n                  (selectAddress)=\\\"setAddress($event)\\\"\\n                  formControlName=\\\"address\\\"\\n                />\\n                <mat-error>{{\\n                  getControl(\\\"address\\\") | validate: \\\"Address\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n              <mat-icon matPrefix class=\\\"searchPanel\\\">search</mat-icon>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Total Employees</mat-label>\\n                <input formControlName=\\\"totalEmp\\\" numberOnly matInput />\\n                <mat-error>{{\\n                  getControl(\\\"totalEmp\\\") | validate: \\\"number Of employees\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Select subscription</mat-label>\\n                <mat-select\\n                  formControlName=\\\"planeId\\\"\\n                  placeholder=\\\"Select subscription \\\"\\n                >\\n                  <mat-option\\n                    *ngFor=\\\"let sub of allSubscriptions\\\"\\n                    [value]=\\\"sub._id\\\"\\n                  >\\n                    {{ sub.name }}</mat-option\\n                  >\\n                </mat-select>\\n                <mat-error>{{\\n                  getControl(\\\"planeId\\\") | validate: \\\"subscription plan\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Max Service Range (In Km)</mat-label>\\n                <input\\n                  appNospace\\n                  type=\\\"number\\\"\\n                  formControlName=\\\"maxGroupRadius\\\"\\n                  matInput\\n                />\\n                <mat-error>{{\\n                  getControl(\\\"maxGroupRadius\\\") | validate: \\\"Max Service Range\\\"\\n                }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div\\n            class=\\\"flex_col_sm_5\\\"\\n            *ngIf=\\\"companyForm.controls.serverType.value == 'house'\\\"\\n          >\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Enter Url</mat-label>\\n                <input appNospace formControlName=\\\"url\\\" matInput />\\n                <mat-error>{{ getControl(\\\"url\\\") | validate: \\\"url\\\" }}</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <mat-label class=\\\"form_label\\\">Server Type</mat-label>\\n              <mat-radio-group\\n                formControlName=\\\"serverType\\\"\\n                (change)=\\\"checkServerType($event.value)\\\"\\n              >\\n                <mat-radio-button\\n                  [checked]=\\\"server.checked\\\"\\n                  *ngFor=\\\"let server of serverTypes\\\"\\n                  [value]=\\\"server.id\\\"\\n                >\\n                  {{ server.name }}\\n                </mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"flex_col_sm_5\\\">\\n            <div class=\\\"form_filed_wrapper\\\">\\n              <label class=\\\"form_label\\\">Payment Type</label>\\n              <mat-radio-group formControlName=\\\"paymentType\\\">\\n                <mat-radio-button\\n                  [checked]=\\\"payment.checked\\\"\\n                  *ngFor=\\\"let payment of paymentTypes\\\"\\n                  [value]=\\\"payment.id\\\"\\n                >\\n                  {{ payment?.name }}\\n                </mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"flex_row\\\">\\n          <div class=\\\"flex_col_sm_10\\\">\\n            <div class=\\\"form_filed_wrapper text-center\\\">\\n              <ul class=\\\"btn_wrapper\\\">\\n                <li>\\n                  <button\\n                    mat-raised-button\\n                    [routerLink]=\\\"'COMPANY' | absolutePath\\\"\\n                    type=\\\"button\\\"\\n                  >\\n                    Cancel\\n                  </button>\\n                </li>\\n                <li>\\n                  <button mat-raised-button color=\\\"primary\\\">Send Invite</button>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { CompanyAddComponent } from './../company-add/component/company-add.component';\nimport { AbsoluteRoutingModule } from './../../../../pipes/absolute-routing/absolute-routing.module';\nimport { MatIconModule, MatButtonModule, MatInputModule, MatSelectModule, MatRadioModule, MatTooltipModule } from '@angular/material';\nimport { SearchFilterModule } from './../../layout-shared/search-filter/search-filter.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CompanyAddService } from './service/company-add.service';\nimport { ValidationErrorPipeModule } from 'src/app/pipes/validation-error/validation-error.pipe.module';\nimport { GooglePlacesModule } from 'src/app/directives/google-places/google-places.module';\nimport { RxReactiveFormsModule } from '@rxweb/reactive-form-validators'; // <-- #2 import module\nimport { NospaceModule } from 'src/app/directives/nospace/nospace.module';\nimport { NumberOnlyModule } from 'src/app/directives/number-only/number-only.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyAddComponent\n  },\n];\n@NgModule({\n  declarations: [CompanyAddComponent],\n  imports: [\n    CommonModule,\n    SearchFilterModule,\n    RouterModule.forChild(routes),\n    MatIconModule,\n    MatButtonModule,\n    AbsoluteRoutingModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ValidationErrorPipeModule,\n    GooglePlacesModule,\n    RxReactiveFormsModule,\n    NospaceModule,\n    NumberOnlyModule\n  ],\n  providers: [CompanyAddService]\n})\nexport class CompanyAddModule { }\n\n","export default \"@charset \\\"UTF-8\\\";\\nmat-radio-button {\\n  margin: 0 43px 0 0;\\n}\\n.flex_row {\\n  display: -webkit-box;\\n  display: flex;\\n  margin: 0 -10px;\\n  -webkit-box-align: center;\\n          align-items: center;\\n}\\n.breadcrumb {\\n  width: 100%;\\n  padding: 10px 15px;\\n}\\n.breadcrumb li {\\n  display: inline-block;\\n}\\n.breadcrumb li a {\\n  color: #006CB8;\\n  text-decoration: none;\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 400;\\n  outline: none;\\n}\\n.breadcrumb li a:before {\\n  padding: 0 5px;\\n  color: #B7BEC1;\\n  content: \\\"/ \\\";\\n}\\n.breadcrumb li a:after {\\n  content: \\\"/ \\\";\\n  padding: 0 2px;\\n  color: #A2ABAE;\\n}\\n.breadcrumb li a.active {\\n  color: #262c2d;\\n  cursor: default;\\n}\\n.breadcrumb li a.active:after {\\n  display: none;\\n}\\n.breadcrumb li:first-child a:before, .breadcrumb li:first-child a:after {\\n  display: none;\\n}\\n.searchPanel {\\n  position: absolute;\\n  top: 20px;\\n  right: 3px;\\n  background: #fff;\\n  width: 29px;\\n  font-size: 23px;\\n}\\n.flex_row {\\n  -webkit-box-align: start;\\n          align-items: flex-start;\\n}\\n.flex_row .form_filed_wrapper {\\n  position: relative;\\n}\\n.flex_row .form_filed_wrapper .add {\\n  position: absolute;\\n  top: 20px;\\n  right: -40px;\\n  cursor: pointer;\\n  outline: none;\\n}\\n.search {\\n  position: relative;\\n}\\n.search .searchPanel {\\n  position: absolute;\\n  top: 20px;\\n  right: 10px;\\n}\\n.addrError {\\n  position: absolute;\\n  bottom: 3px;\\n  font-size: 12px;\\n  padding-left: 10px;\\n}\\n:host ::ng-deep .mat-select.mat-select-invalid .mat-select-placeholder {\\n  color: #f00;\\n}\\n:host ::ng-deep .mat-form-field-invalid input::-webkit-input-placeholder {\\n  color: #f00;\\n}\\n:host ::ng-deep .mat-form-field-invalid input::-moz-placeholder {\\n  color: #f00;\\n}\\n:host ::ng-deep .mat-form-field-invalid input::-ms-input-placeholder {\\n  color: #f00;\\n}\\n:host ::ng-deep .mat-form-field-invalid input::placeholder {\\n  color: #f00;\\n}\\nbutton {\\n  box-shadow: none !important;\\n  border: 1px solid #79f2c0 !important;\\n  min-width: 104px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sYXlvdXQvY29tcGFueS9jb21wYW55LWFkZC9jb21wb25lbnQvY29tcGFueS1hZGQuY29tcG9uZW50LnNjc3MiLCIvaG9tZS90cmFuc2xhYmRldjIvRGV2L2FuZ3VsYXIvY29tbV9mZV9zYWRtaW4vc3JjL2FwcC9tb2R1bGVzL2xheW91dC9jb21wYW55L2NvbXBhbnktYWRkL2NvbXBvbmVudC9jb21wYW55LWFkZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7RUFDSSxrQkFBQTtBREVKO0FDQ0E7RUFDSSxvQkFBQTtFQUFBLGFBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7VUFBQSxtQkFBQTtBREVKO0FDQ0E7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7QURFSjtBQ0RJO0VBQ0kscUJBQUE7QURHUjtBQ0ZRO0VBQ0ksY0FBQTtFQUNBLHFCQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7QURJWjtBQ0hZO0VBQ0ksY0FBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0FES2hCO0FDSFk7RUFDSSxhQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QURLaEI7QUNIWTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FES2hCO0FDSmdCO0VBQ0ksYUFBQTtBRE1wQjtBQ0FnQjtFQUVJLGFBQUE7QURDcEI7QUNNQTtFQUNJLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0FESEo7QUNNQTtFQUNJLHdCQUFBO1VBQUEsdUJBQUE7QURISjtBQ0lJO0VBQ0ksa0JBQUE7QURGUjtBQ0dRO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0FERFo7QUNNQTtFQUNJLGtCQUFBO0FESEo7QUNJSTtFQUNJLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7QURGUjtBQ01BO0VBQ0ksa0JBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FESEo7QUNVUTtFQUNJLFdBQUE7QURQWjtBQ2FZO0VBQ0ksV0FBQTtBRFhoQjtBQ1VZO0VBQ0ksV0FBQTtBRFhoQjtBQ1VZO0VBQ0ksV0FBQTtBRFhoQjtBQ1VZO0VBQ0ksV0FBQTtBRFhoQjtBQ2dCQTtFQUNJLDJCQUFBO0VBQ0Esb0NBQUE7RUFDQSxnQkFBQTtBRGJKIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9sYXlvdXQvY29tcGFueS9jb21wYW55LWFkZC9jb21wb25lbnQvY29tcGFueS1hZGQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgbWFyZ2luOiAwIDQzcHggMCAwO1xufVxuXG4uZmxleF9yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IDAgLTEwcHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5icmVhZGNydW1iIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbn1cbi5icmVhZGNydW1iIGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmJyZWFkY3J1bWIgbGkgYSB7XG4gIGNvbG9yOiAjMDA2Q0I4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBvdXRsaW5lOiBub25lO1xufVxuLmJyZWFkY3J1bWIgbGkgYTpiZWZvcmUge1xuICBwYWRkaW5nOiAwIDVweDtcbiAgY29sb3I6ICNCN0JFQzE7XG4gIGNvbnRlbnQ6IFwiLyBcIjtcbn1cbi5icmVhZGNydW1iIGxpIGE6YWZ0ZXIge1xuICBjb250ZW50OiBcIi/CoFwiO1xuICBwYWRkaW5nOiAwIDJweDtcbiAgY29sb3I6ICNBMkFCQUU7XG59XG4uYnJlYWRjcnVtYiBsaSBhLmFjdGl2ZSB7XG4gIGNvbG9yOiAjMjYyYzJkO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4uYnJlYWRjcnVtYiBsaSBhLmFjdGl2ZTphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uYnJlYWRjcnVtYiBsaTpmaXJzdC1jaGlsZCBhOmJlZm9yZSwgLmJyZWFkY3J1bWIgbGk6Zmlyc3QtY2hpbGQgYTphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5zZWFyY2hQYW5lbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogM3B4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB3aWR0aDogMjlweDtcbiAgZm9udC1zaXplOiAyM3B4O1xufVxuXG4uZmxleF9yb3cge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cbi5mbGV4X3JvdyAuZm9ybV9maWxlZF93cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmZsZXhfcm93IC5mb3JtX2ZpbGVkX3dyYXBwZXIgLmFkZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogLTQwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLnNlYXJjaCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5zZWFyY2ggLnNlYXJjaFBhbmVsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDIwcHg7XG4gIHJpZ2h0OiAxMHB4O1xufVxuXG4uYWRkckVycm9yIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDNweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG5cbjpob3N0IDo6bmctZGVlcCAubWF0LXNlbGVjdC5tYXQtc2VsZWN0LWludmFsaWQgLm1hdC1zZWxlY3QtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI2YwMDtcbn1cbjpob3N0IDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtaW52YWxpZCBpbnB1dDo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogI2YwMDtcbn1cblxuYnV0dG9uIHtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBib3JkZXI6IDFweCBzb2xpZCAjNzlmMmMwICFpbXBvcnRhbnQ7XG4gIG1pbi13aWR0aDogMTA0cHg7XG59IiwibWF0LXJhZGlvLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiAwIDQzcHggMCAwO1xufVxuXG4uZmxleF9yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luOiAwIC0xMHB4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5icmVhZGNydW1iIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gICAgbGkge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6ICMwMDZDQjg7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDVweDtcbiAgICAgICAgICAgICAgICBjb2xvcjogI0I3QkVDMTtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIi8gXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIi9cXDAwYTBcIjtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDJweDtcbiAgICAgICAgICAgICAgICBjb2xvcjogI0EyQUJBRTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDM4LCA0NCwgNDUpO1xuICAgICAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAmOmJlZm9yZSxcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5zZWFyY2hQYW5lbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjBweDtcbiAgICByaWdodDogM3B4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgd2lkdGg6IDI5cHg7XG4gICAgZm9udC1zaXplOiAyM3B4O1xufVxuXG4uZmxleF9yb3cge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIC5mb3JtX2ZpbGVkX3dyYXBwZXIge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIC5hZGQge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAyMHB4O1xuICAgICAgICAgICAgcmlnaHQ6IC00MHB4O1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLnNlYXJjaCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC5zZWFyY2hQYW5lbCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAyMHB4O1xuICAgICAgICByaWdodDogMTBweDtcbiAgICB9XG59XG5cbi5hZGRyRXJyb3Ige1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDNweDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG5cbjpob3N0IDo6bmctZGVlcHtcbiAgICAubWF0LXNlbGVjdHtcbiAgICAgICAgJi5tYXQtc2VsZWN0LWludmFsaWR7XG4gICAgICAgIC5tYXQtc2VsZWN0LXBsYWNlaG9sZGVye1xuICAgICAgICAgICAgY29sb3I6I2YwMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICB9XG4gICAgLm1hdC1mb3JtLWZpZWxkLWludmFsaWR7XG4gICAgICAgIGlucHV0e1xuICAgICAgICAgICAgJjo6cGxhY2Vob2xkZXJ7XG4gICAgICAgICAgICAgICAgY29sb3I6I2YwMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmJ1dHRvbntcbiAgICBib3gtc2hhZG93Om5vbmUgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNzlmMmMwICFpbXBvcnRhbnQ7XG4gICAgbWluLXdpZHRoOjEwNHB4O1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n  FormControl,\n  Validators\n} from \"@angular/forms\";\nimport { CompanyAddService } from \"../service/company-add.service\";\nimport {\n  COMPANY_PAYMENT_TYPES,\n  COMPANY_SERVER_TYPES\n} from \"src/app/constant/app-constant\";\nimport { debounceTime, distinctUntilChanged } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { COMPANY } from \"src/app/constant/absolute-routes\";\nimport { RxwebValidators } from \"@rxweb/reactive-form-validators\";\nimport { UtilityService } from \"src/app/modules/shared/services/utility.service\";\n\n@Component({\n  selector: \"app-company-add\",\n  templateUrl: \"./company-add.component.html\",\n  styleUrls: [\"./company-add.component.scss\"]\n})\nexport class CompanyAddComponent implements OnInit {\n  companyForm: FormGroup;\n  paymentTypes = COMPANY_PAYMENT_TYPES;\n  serverTypes = COMPANY_SERVER_TYPES;\n  companyTypes: any[] = [];\n  allSubscriptions: any[] = [];\n  isAddress: boolean = false;\n  isCompanyUniqueMsg: string;\n  items: FormArray;\n  phoneArrayLength: number = 0;\n\n  constructor(\n    private _companyAddService: CompanyAddService,\n    private _fb: FormBuilder,\n    private _router: Router,\n    private _uitilityService: UtilityService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.getAllSubscriptions();\n    this.getAllCompanyType();\n    this.validateCode();\n  }\n\n  /********* Create company form ***********/\n  createForm() {\n    this.companyForm = this._companyAddService.createCompanyForm();\n    this.companyForm.controls.paymentType.setValue(\"invoice\"); // set paymemt mode initail value\n    this.companyForm.controls.serverType.setValue(\"house\"); // set server type initail value\n  }\n  /***********  END   ************/\n\n  /********  Validate company code is unique or not ********/\n  validateCode() {\n    this.companyForm.controls.companyCode.valueChanges\n      .pipe(\n        debounceTime(800),\n        distinctUntilChanged()\n      )\n      .subscribe(res => {\n        if (res) {\n          this.checkCompanyCodeUnique(res);\n        }\n      });\n  }\n  /***********  END   ************/\n\n  /***********  Get all controls   ************/\n  getControl(control) {\n    return this.companyForm.controls[control];\n  }\n  /***********  END   ************/\n\n  /***********  Get form array all controls   ************/\n  getArrayControl(control) {\n    return this.companyForm.controls.contactNumber[\"controls\"][0].controls[\n      control\n    ];\n  }\n  /***********  END   ************/\n\n  /***********  Form array getter   ************/\n  get contactNumber() {\n    return this.companyForm.controls[\"contactNumber\"] as FormArray;\n  }\n  /***********  END   ************/\n\n  address(): FormControl {\n    return this.companyForm.controls[\"address\"] as FormControl;\n  }\n\n  /***********  For adding more contact number   ************/\n  addItem(): void {\n    this.contactNumber.push(this._companyAddService.createItem());\n    this.phoneArrayLength = this.contactNumber.controls.length;\n  }\n  /***********  END   ************/\n\n  /***********  For removing contact number from from array   ************/\n  removeNumber(index: number): void {\n    this.contactNumber.removeAt(index);\n    this.phoneArrayLength = this.contactNumber.controls.length;\n  }\n  /***********  END   ************/\n\n  /***********  This method call when address select from google autocomplete   ************/\n  setAddress(data) {\n    this.companyForm.controls.address.setValue(data.formatted_address);\n    this.companyForm.controls.latitude.setValue(data.latitude);\n    this.companyForm.controls.longitude.setValue(data.longitude);\n  }\n  /***********  END   ************/\n\n  /***********  For getting all the subscriptions   ************/\n  getAllSubscriptions() {\n    this._companyAddService.getAllSubscription().subscribe(resp => {\n      if (resp && resp.statusCode == 200) {\n        this.allSubscriptions = resp.data.subscriptionList;\n      }\n    });\n  }\n  /***********  END   ************/\n\n  /***********  For getting all the company type   ************/\n  getAllCompanyType() {\n    this._companyAddService.getCmpnyType().subscribe(resp => {\n      if (resp && resp.statusCode == 200) {\n        this.companyTypes = resp.data;\n      }\n    });\n  }\n  /***********  END   ************/\n\n  /***********  For checking company code is unique or not  ************/\n  checkCompanyCodeUnique(data: string) {\n    this._companyAddService\n      .checkCompanyCodeUnique({ companyCode: data })\n      .subscribe(resp => {\n        if (resp && resp.statusCode == 200) {\n          this.isCompanyUniqueMsg = null;\n        } else if (resp && resp.statusCode == 400) {\n          this.companyForm.controls[\"companyCode\"].setErrors({\n            incorrect: true\n          });\n          this.isCompanyUniqueMsg = \"Company code must be unique\";\n        }\n      });\n  }\n  /***********  END   ************/\n\n  /***********  This method is call when user click outside the google input for validate the error   ************/\n  // checkLocation() {\n  //   if (!this.companyForm.controls[\"address\"].value) {\n  //     this.isAddress = true;\n  //   } else {\n  //     this.isAddress = false;\n  //   }\n  // }\n  /***********  END   ************/\n\n  /***********  For adding the company   ************/\n  addCompany(formValue) {\n    if (this.companyForm.invalid || this.companyForm.disabled) {\n      return;\n    }\n    if (formValue.address) {\n      if (formValue.latitude && formValue.longitude) {\n        let data = { ...formValue };\n        this.companyForm.disable();\n\n        this._companyAddService.addCompany(data).subscribe(\n          resp => {\n            if (resp && resp.statusCode == 200) {\n              this._router.navigate([COMPANY]);\n            }\n          },\n          err => {\n            this.companyForm.enable();\n          }\n        );\n      } else {\n        this._uitilityService.showAlert(\"Please select the valid address\");\n      }\n    } else {\n      this._uitilityService.showAlert(\"Please select the address\");\n    }\n  }\n  /***********  END   ************/\n\n  checkServerType(event) {\n    if (event == \"fleet\") {\n      this.companyForm.controls.url.clearValidators();\n      this.companyForm.controls.url.setErrors(null);\n    } else {\n      this.companyForm.controls.url.setValidators([\n        Validators.required,\n        RxwebValidators.url()\n      ]);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UtilityService } from 'src/app/modules/shared/services/utility.service';\nimport { HttpService } from 'src/app/modules/shared/services/http.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormService } from 'src/app/modules/shared/services/form.service';\nimport { GET_ALL_SUBSCRIPTION, COMPANY_CODE_UNIQUE, ADD_NEW_COMPANY, GET_ALL_COMPANYS_TYPE } from 'src/app/constant/url';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { COMMON_MESSAGES } from 'src/app/constant/message';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyAddService {\n\n  constructor(private _formService: FormService,\n    private _formBuilder: FormBuilder,\n    private _http: HttpService,\n    private _uitilityService: UtilityService) { }\n\n\n  createCompanyForm() {\n    return this._formBuilder.group(\n      {\n        \"name\": this._formService.getControl('name'),\n        \"email\": this._formService.getControl('email'),\n        \"companyCode\": this._formService.getControl('alphaNumeric'),\n        \"companyType\": this._formService.getControl('dropdown'),\n        \"address\": this._formService.getControl('address'),\n        \"totalEmp\": this._formService.getControl('employeeCapacity'),\n        \"paymentType\": this._formService.getControl('alphabetic'),\n        \"serverType\": this._formService.getControl('dropdown'),\n        \"planeId\": this._formService.getControl('address'),\n        \"url\": this._formService.getControl('url'),\n        \"longitude\": \"\",\n        \"latitude\": \"\",\n        \"maxGroupRadius\": this._formService.getControl('dropdown'),\n        \"contactNumber\": this._formBuilder.array([this.createItem()]),\n      }\n    )\n  }\n\n  createItem(): FormGroup {\n    return this._formBuilder.group({\n      phoneNumber: this._formService.getControl('phone')\n    });\n  }\n\n  getAllSubscription() {\n    return this._http.get<any>(GET_ALL_SUBSCRIPTION);\n  }\n\n  getCmpnyType() {\n    return this._http.get<any>(GET_ALL_COMPANYS_TYPE);\n  }\n\n  checkCompanyCodeUnique(data: object) {\n    return this._http.get<any>(COMPANY_CODE_UNIQUE, data, false);\n  }\n\n  addCompany(data) {\n    return this._http.post(ADD_NEW_COMPANY, data).pipe(\n      map(\n        response => {\n          this._uitilityService.showAlert(COMMON_MESSAGES['ADDED']('Company'));\n          return response;\n        }\n      ),\n      catchError(\n        error => throwError(error)\n      )\n    )\n  }\n}\n\n\n\n"],"sourceRoot":"webpack:///"}