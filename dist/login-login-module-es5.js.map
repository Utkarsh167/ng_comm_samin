{"version":3,"sources":["src/app/modules/account/login/component/login.component.html","src/app/modules/account/login/component/login.component.scss","src/app/modules/account/login/component/login.component.ts","src/app/modules/account/login/login.module.ts","src/app/modules/account/login/service/login.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h1 class=\\\"form_heading\\\">Login</h1>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <div class=\\\"form_filed_wrapper\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Email</mat-label>\\n      <input matInput formControlName=\\\"email\\\">\\n      <!-- <mat-error>{{getControl('email')|validate:'email'}}</mat-error> -->\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"form_filed_wrapper\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Password</mat-label>\\n      <input matInput formControlName=\\\"password\\\" [type]=\\\"hide ? 'password' :'text'\\\">\\n      <!-- <mat-error>{{getControl('password')|validate:'password'}}</mat-error> -->\\n      <mat-icon matSuffix (click)=\\\"hide = !hide\\\">\\n        {{hide ? 'visibility_off' :'visibility'}}\\n      </mat-icon>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"form_filed_wrapper text-right\\\">\\n    <a class=\\\"forgot\\\" [routerLink]=\\\"'FORGOT_PASSWORD'|absolutePath\\\">Forgot Password</a>\\n  </div>\\n  <div class=\\\"form_filed_wrapper text-center\\\">\\n    <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n  </div>\\n</form>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNjb3VudC9sb2dpbi9jb21wb25lbnQvbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  hide = true;\n  loginForm: FormGroup;\n\n  constructor(\n    private _loginService: LoginService\n  ) {\n    this.createLoginForm();\n  }\n  \n  ngOnInit() {\n  }\n\n  /* \n      Method For Creating Login Form \n  */\n  createLoginForm() {\n    this.loginForm = this._loginService.createLoginForm();\n  }\n\n  getControl(control) {\n    return this.loginForm.controls[control];\n  }\n\n  /*  \n       Method For Calling Login API\n  */\n  login() {\n    if (this.loginForm.invalid || this.loginForm.disabled) {\n      return;\n    }\n    const data = { ...this.loginForm.value };\n    this.loginForm.disable();\n    this._loginService.login(data).subscribe(\n      response => {\n      },\n      err => {\n        this.loginForm.enable();\n      }\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './component/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginService } from './service/login.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatIconModule,\n  MatInputModule,\n  MatFormFieldModule,\n} from '@angular/material';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    SharedModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  providers: [LoginService]\n})\nexport class LoginModule { }\n","import { Injectable } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { HttpService } from \"../../../shared/services/http.service\";\nimport { UtilityService } from \"../../../shared/services/utility.service\";\nimport { Router } from \"@angular/router\";\nimport { throwError } from \"rxjs\";\nimport { FormService } from \"../../../shared/services/form.service\";\nimport { LOGIN } from \"src/app/constant/url\";\nimport { map, catchError } from \"rxjs/operators\";\n// import { DataTransferService } from '../../../shared/services/data-transfer.service';\nimport { ADMIN, COMPANY } from \"../../../../constant/routes\";\n\n@Injectable()\nexport class LoginService {\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _http: HttpService,\n    private _utilityService: UtilityService,\n    private _router: Router,\n    private _formService: FormService // private _dataTransferService: DataTransferService\n  ) {}\n\n  /* \n        Method For Creating Login Form\n    */\n  createLoginForm() {\n    return this._formBuilder.group({\n      email: this._formService.getControl(\"email\"),\n      password: this._formService.getControl(\"password\")\n    });\n  }\n\n  /*  \n        Method For Calling Login API\n    */\n  login(data) {\n    data = this._utilityService.trim(data);\n    return this._http.post(LOGIN, data).pipe(\n      map(response => {\n        this.loginSuccess(response.data);\n        return response;\n      }),\n      catchError(err => throwError(err))\n    );\n  }\n  /*  \n        Method For Login\n    */\n  loginSuccess(data) {\n    localStorage.setItem(\"fleet-super-admin-token\", data[\"accessToken\"]);\n    localStorage.setItem(\"fleet-super-admin-id\", data.adminObject[\"id\"]);\n    // this._dataTransferService.profileData = data.adminObject;\n    this._router.navigate([\"/admin/company\"]);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}